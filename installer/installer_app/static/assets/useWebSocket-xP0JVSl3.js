import{r as l,k as F,l as L,E as R,O as i}from"./vendor-kN0nZHKs.js";function H(S,I={}){const{autoConnect:E=!0,reconnectInterval:T=5e3,maxReconnectAttempts:b=10,heartbeatInterval:O=3e4,protocols:_=[]}=I,o=l(null),f=l(!1),u=l(!1),v=l(null),s=l(0),k=l([]),y=l(null),d=l(new Map);let m=null,p=null;const g=()=>{var t;return((t=o.value)==null?void 0:t.readyState)===WebSocket.OPEN?Promise.resolve():new Promise((n,c)=>{try{u.value=!0,v.value=null,o.value=new WebSocket(S,_),o.value.onopen=e=>{console.log("WebSocket connected:",S),f.value=!0,u.value=!1,s.value=0,v.value=null,D(),r("connect",e),n(e)},o.value.onmessage=e=>{try{const a=JSON.parse(e.data);if(a.type==="ping"){W({type:"pong",timestamp:Date.now()});return}const C={id:Date.now()+Math.random(),timestamp:new Date().toISOString(),data:a,raw:e.data};k.value.push(C),y.value=C,r("message",C),a.type&&r(a.type,a)}catch(a){console.error("Failed to parse WebSocket message:",a),r("error",{type:"parse_error",error:a,raw:e.data})}},o.value.onclose=e=>{console.log("WebSocket disconnected:",e.code,e.reason),f.value=!1,u.value=!1,w(),r("disconnect",e),!e.wasClean&&s.value<b&&x()},o.value.onerror=e=>{console.error("WebSocket error:",e),v.value=e,u.value=!1,r("error",{type:"connection_error",event:e}),c(e)}}catch(e){console.error("Failed to create WebSocket connection:",e),v.value=e,u.value=!1,r("error",{type:"creation_error",error:e}),c(e)}})},h=()=>{o.value&&(N(),w(),o.value.close(1e3,"Client disconnect"),o.value=null),f.value=!1,u.value=!1,s.value=0},W=t=>{if(!o.value||o.value.readyState!==WebSocket.OPEN)return console.warn("WebSocket not connected, cannot send message:",t),!1;try{const n=typeof t=="string"?t:JSON.stringify(t);return o.value.send(n),r("send",{data:t,message:n}),!0}catch(n){return console.error("Failed to send WebSocket message:",n),r("error",{type:"send_error",error:n,data:t}),!1}},x=()=>{if(s.value>=b){console.error("Max reconnection attempts reached"),r("reconnect_failed",{attempts:s.value});return}N();const t=T*Math.pow(1.5,s.value);console.log(`Scheduling WebSocket reconnection in ${t}ms (attempt ${s.value+1}/${b})`),m=setTimeout(()=>{s.value++,r("reconnect_attempt",{attempt:s.value}),g().catch(()=>{})},t)},N=()=>{m&&(clearTimeout(m),m=null)},D=()=>{O<=0||(w(),p=setInterval(()=>{f.value&&W({type:"ping",timestamp:Date.now()})},O))},w=()=>{p&&(clearInterval(p),p=null)},P=(t,n)=>(d.value.has(t)||d.value.set(t,[]),d.value.get(t).push(n),()=>M(t,n)),M=(t,n)=>{const c=d.value.get(t);if(c){const e=c.indexOf(n);e>-1&&c.splice(e,1)}},r=(t,n)=>{const c=d.value.get(t);c&&c.forEach(e=>{try{e(n)}catch(a){console.error(`Error in WebSocket event listener for '${t}':`,a)}})},$=()=>{k.value=[],y.value=null},A=()=>{if(!o.value)return"disconnected";switch(o.value.readyState){case WebSocket.CONNECTING:return"connecting";case WebSocket.OPEN:return"connected";case WebSocket.CLOSING:return"closing";case WebSocket.CLOSED:return"disconnected";default:return"unknown"}};return F(()=>{E&&g()}),L(()=>{h()}),R(()=>S,(t,n)=>{t!==n&&f.value&&(h(),E&&setTimeout(g,100))}),{socket:i(o),isConnected:i(f),isConnecting:i(u),connectionError:i(v),reconnectAttempts:i(s),messages:i(k),lastMessage:i(y),connect:g,disconnect:h,send:W,on:P,off:M,clearMessages:$,getStatus:A}}export{H as u};
