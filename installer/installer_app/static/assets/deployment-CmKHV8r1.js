import{s as I,r,i as m}from"./vendor-kN0nZHKs.js";const x=I("deployment",()=>{const o=r([]),s=r(null),u=r(!1),c=r(0),i=r([]),p=r(null),v=m(()=>o.value.filter(e=>e.status==="running"||e.status==="deploying")),d=m(()=>o.value.filter(e=>e.status==="completed")),y=m(()=>o.value.filter(e=>e.status==="failed")),D=m(()=>v.value.length>0),g=async e=>{u.value=!0,p.value=null,c.value=0,i.value=[];try{console.log("Starting deployment with config:",e);const n={id:Date.now().toString(),name:`${e.env} Deployment`,environment:e.env,components:e.images,status:"deploying",progress:0,startedAt:new Date().toISOString(),config:{...e}};o.value.push(n),s.value=n;for(let l=0;l<=100;l+=10)await new Promise(w=>setTimeout(w,200)),c.value=l,n.progress=l,a(`Deployment progress: ${l}%`),l===50?a("Installing components..."):l===80?a("Configuring services..."):l===100&&(a("Deployment completed successfully!"),n.status="completed",n.completedAt=new Date().toISOString());return n}catch(t){throw console.error("Deployment failed:",t),p.value=t.message,s.value&&(s.value.status="failed",s.value.error=t.message),a(`Deployment failed: ${t.message}`),t}finally{u.value=!1}},f=async e=>o.value.find(n=>n.id===e)||null,S=async e=>{var n;const t=o.value.find(l=>l.id===e);t&&t.status==="deploying"&&(t.status="cancelled",t.cancelledAt=new Date().toISOString(),a("Deployment cancelled by user")),((n=s.value)==null?void 0:n.id)===e&&(u.value=!1)},a=e=>{i.value.push({id:Date.now(),timestamp:new Date().toISOString(),message:e,level:"info"})};return{deployments:o,currentDeployment:s,isDeploying:u,deploymentProgress:c,deploymentLogs:i,deploymentError:p,activeDeployments:v,completedDeployments:d,failedDeployments:y,hasActiveDeployments:D,deploy:g,getDeploymentStatus:f,cancelDeployment:S,addLog:a,clearLogs:()=>{i.value=[]},removeDeployment:e=>{var n;const t=o.value.findIndex(l=>l.id===e);t>-1&&o.value.splice(t,1),((n=s.value)==null?void 0:n.id)===e&&(s.value=null)},setCurrentDeployment:e=>{s.value=e},resetDeploymentState:()=>{s.value=null,u.value=!1,c.value=0,i.value=[],p.value=null},initializeMockData:()=>{o.value=[{id:"1",name:"Local Development",environment:"local",components:["openjourney-server","openjourney-web"],status:"running",progress:100,startedAt:new Date(Date.now()-2*60*60*1e3).toISOString(),completedAt:new Date(Date.now()-2*60*60*1e3+5*60*1e3).toISOString(),config:{env:"local",images:["openjourney-server","openjourney-web"],overwrite:!1,production:!1}}]}}});export{x as u};
