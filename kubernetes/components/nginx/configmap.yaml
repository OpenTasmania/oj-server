apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    events {
        worker_connections  1024;
    }
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /var/log/nginx/access.log  main;
        sendfile        on;
        keepalive_timeout  65;
        include /etc/nginx/conf.d/*.conf;
    }
  transit_proxy.conf: |
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name example.com; # This will be replaced by your vm_ip_or_domain
        access_log /var/log/nginx/transit_proxy.access.log;
        error_log /var/log/nginx/transit_proxy.error.log;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;

        location /vector/ {
            proxy_pass http://pg-tileserv-service:7800;
        }
        location /raster/hot/ {
            proxy_pass http://apache-service:8080/hot/;
        }
        location /route/v1/ {
            proxy_pass http://osrm-service:5000/route/v1/;
        }
        location / {
            root /var/www/html/map_test_page;
            index index.html index.htm;
            try_files $uri $uri/ /index.html =404;
        }
    }